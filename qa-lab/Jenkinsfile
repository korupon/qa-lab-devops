pipeline {
  agent any

  environment {
    SLACK_CHANNEL = 'C08RQ2LJREX'
    SLACK_TOKEN_ID = 'slack-new' // The Jenkins credential ID for your xoxb- bot token
  }

  options {
    timestamps()
  }

  stages {
    stage('Start Notification') {
      steps {
        script {
          slackSend(
            channel: env.SLACK_CHANNEL,
            color: '#439FE0',
            message: "üöÄ *Build Started* for `${env.JOB_NAME}` #${env.BUILD_NUMBER} (<${env.BUILD_URL}|View Job>)",
            tokenCredentialId: env.SLACK_TOKEN_ID,
            botUser: true
          )
        }
      }
    }

    stage('Build') {
      steps {
        echo 'Building...'
        // Simulate success or failure
        // error("Simulated failure") // Uncomment to test failure handling
      }
    }

    stage('Test') {
      steps {
        echo 'Testing...'
      }
    }

    stage('Deploy') {
      steps {
        echo 'Deploying...'
      }
    }
  }

  post {
    success {
      slackSend(
        channel: env.SLACK_CHANNEL,
        color: 'good',
        message: "‚úÖ *Build Succeeded* for `${env.JOB_NAME}` #${env.BUILD_NUMBER}",
        tokenCredentialId: env.SLACK_TOKEN_ID,
        botUser: true
      )
    }
    failure {
      slackSend(
        channel: env.SLACK_CHANNEL,
        color: 'danger',
        message: "‚ùå *Build Failed* for `${env.JOB_NAME}` #${env.BUILD_NUMBER}",
        tokenCredentialId: env.SLACK_TOKEN_ID,
        botUser: true
      )
    }
    aborted {
      slackSend(
        channel: env.SLACK_CHANNEL,
        color: '#808080',
        message: "‚ö†Ô∏è *Build Aborted* for `${env.JOB_NAME}` #${env.BUILD_NUMBER}",
        tokenCredentialId: env.SLACK_TOKEN_ID,
        botUser: true
      )
    }
  }
}
